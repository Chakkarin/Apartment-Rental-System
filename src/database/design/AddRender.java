package database.design;

import database.Entity.AddRenteral;
import database.sqlcontrolDesign.StockAddRender;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;

public class AddRender extends JFrame {

    int selected;
    // Comment ไว้

    private Vector vstu = new Vector();
    private TableModel model;
    String error = "D:\\NetBeansProjects\\Apartment Rental System\\src\\database\\res\\icon3.png";
    String ok = "D:\\NetBeansProjects\\Apartment Rental System\\src\\database\\res\\Ok-icon.png";
    private String columnName[] = {"รหัสบัตรประชาชน", "ชื่อ", "นามสกุล", "เพศ", "เบอร์โทรศัพท์", "ที่อยู่"};
    private Object rowdata[][];
    StockAddRender st;
    static String nameSelect;
    static String idSelect;
    //licent
    static int idlicense = 1000;
    static int idreceipt = 100;

    public AddRender() {
        initComponents();
        ++idreceipt;
        ++idlicense;
        st = new StockAddRender();
        updateTable();
        this.setLocationRelativeTo(null);
        System.out.println("ของใน stock" + StockAddRender.v.size() + "รายการ");
        System.out.println(idlicense++);
        System.out.println(idreceipt++);
        idlicense++;
        idreceipt++;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg1 = new javax.swing.ButtonGroup();
        pa1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtLast = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTel = new javax.swing.JTextField();
        txtPeple = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        lbch = new javax.swing.JLabel();
        lbch1 = new javax.swing.JLabel();
        lbch2 = new javax.swing.JLabel();
        lbch3 = new javax.swing.JLabel();
        lbch4 = new javax.swing.JLabel();
        pTable = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbRender = new javax.swing.JTable();
        edit = new javax.swing.JButton();
        add = new javax.swing.JButton();
        select = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("เพิ่ม/เลือกผู้เช่า");
        setResizable(false);

        pa1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ข้อมูลผู้เช่า", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Angsana New", 1, 24))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("ชื่อ");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtNameCaretUpdate(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("นามสกุล");

        txtLast.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtLast.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtLastCaretUpdate(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("เบอร์โทรศัพท์");

        txtTel.setColumns(10);
        txtTel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTel.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTelCaretUpdate(evt);
            }
        });

        txtPeple.setColumns(10);
        txtPeple.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPeple.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtPepleCaretUpdate(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("รหัสประชาชน");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("เพศ");

        bg1.add(r1);
        r1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        r1.setSelected(true);
        r1.setText("ชาย");

        bg1.add(r2);
        r2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        r2.setText("หญิง");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("ที่อยู่");

        txtArea.setColumns(20);
        txtArea.setFont(new java.awt.Font("Angsana New", 0, 18)); // NOI18N
        txtArea.setLineWrap(true);
        txtArea.setRows(5);
        txtArea.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtAreaCaretUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(txtArea);

        javax.swing.GroupLayout pa1Layout = new javax.swing.GroupLayout(pa1);
        pa1.setLayout(pa1Layout);
        pa1Layout.setHorizontalGroup(
            pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pa1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pa1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pa1Layout.createSequentialGroup()
                        .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r1)
                            .addComponent(r2)
                            .addGroup(pa1Layout.createSequentialGroup()
                                .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbch1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pa1Layout.createSequentialGroup()
                                .addComponent(txtPeple, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbch, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pa1Layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(lbch2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbch3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pa1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbch4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        pa1Layout.setVerticalGroup(
            pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pa1Layout.createSequentialGroup()
                .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pa1Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(r1))
                    .addGroup(pa1Layout.createSequentialGroup()
                        .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbch2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbch3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(15, 15, 15)
                        .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbch1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPeple, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(lbch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pa1Layout.createSequentialGroup()
                        .addGroup(pa1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pa1Layout.createSequentialGroup()
                        .addComponent(lbch4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
        );

        tbRender.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสประชาชน", "ชื่อ", "นามสกุล", "เพศ", "เบอร์โทรศัพท์", "ที่อยู๋"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbRender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbRenderMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbRender);
        if (tbRender.getColumnModel().getColumnCount() > 0) {
            tbRender.getColumnModel().getColumn(0).setResizable(false);
            tbRender.getColumnModel().getColumn(1).setResizable(false);
            tbRender.getColumnModel().getColumn(2).setResizable(false);
            tbRender.getColumnModel().getColumn(3).setResizable(false);
            tbRender.getColumnModel().getColumn(4).setResizable(false);
            tbRender.getColumnModel().getColumn(5).setResizable(false);
        }

        edit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database/res/Close-2-icon.png"))); // NOI18N
        edit.setToolTipText("ลบ");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database/res/User-Group-icon.png"))); // NOI18N
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        select.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        select.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database/res/Ok-icon.png"))); // NOI18N
        select.setText("เลือก");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pTableLayout = new javax.swing.GroupLayout(pTable);
        pTable.setLayout(pTableLayout);
        pTableLayout.setHorizontalGroup(
            pTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(pTableLayout.createSequentialGroup()
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edit)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTableLayout.createSequentialGroup()
                        .addGap(0, 759, Short.MAX_VALUE)
                        .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pTableLayout.setVerticalGroup(
            pTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        //Check
        if (validateData()) {
            JOptionPane.showMessageDialog(this, "กรุณาป้อนข้อมูลให้ถูกต้อง", "ERROR", JOptionPane.ERROR_MESSAGE);
            //UpdateData
        } else if (tbRender.isRowSelected(selected) && !validateData()) {
            int i = JOptionPane.showConfirmDialog(this, "คุณต้องการบันทึกข้อมูลแทนที่แถวที่เลือกหรือไม่", "ERROR", JOptionPane.OK_CANCEL_OPTION);
            if (i == JOptionPane.OK_OPTION) {
                AddRenteral art = new AddRenteral();
                String before = tbRender.getValueAt(selected, 0).toString();
                art.setId(txtPeple.getText());
                art.setName(txtName.getText());
                art.setlName(txtLast.getText());
                String sex = "";
                if (r1.isSelected()) {
                    sex = "M";
                }
                if (r2.isSelected()) {
                    sex = "F";
                }
                art.setSex(sex);
                art.setTel(txtTel.getText());
                art.setAddress(txtArea.getText());
                int r1 = StockAddRender.updateDB(art, before);
                int r2 = StockAddRender.updateAdressDB(art, before);
                int r3 = StockAddRender.updateTelDB(art, before);
                if (r1 == 1 && r2 == 1 && r3 == 1) {
                    JOptionPane.showMessageDialog(this, "อัพเดทข้อมูลเรียบร้อย");
                    StockAddRender.v.remove(selected);
                    StockAddRender.v.add(selected, art);
                    updateTable();
                    clearData();
                }
            } else {
            }
        }
        if (checkId()) {
            JOptionPane.showMessageDialog(this, "รหัสประชาชนซ้ำกันกับข้อมูล", "ERROR", JOptionPane.ERROR_MESSAGE);
            //การ Insert ข้อมูล
        }
        if (!checkId() && !validateData() && !tbRender.isRowSelected(selected)) {
            AddRenteral art = new AddRenteral();
            art.setId(txtPeple.getText());
            art.setName(txtName.getText());
            art.setlName(txtLast.getText());
            String sex = "";
            if (r1.isSelected()) {
                sex = "M";
            }
            if (r2.isSelected()) {
                sex = "F";
            }
            art.setSex(sex);
            art.setTel(txtTel.getText());
            art.setAddress(txtArea.getText());
            int r1 = StockAddRender.insertDB(art);
            int r2 = StockAddRender.insertTelDB(art);
            int r3 = StockAddRender.insertTelAddess(art);
            if (r1 == 1 && r2 == 1 && r3 == 1) {
                JOptionPane.showMessageDialog(this, "บันทึกเรียบร้อย");
                //เพิ่ม Object และอัพเดทตาราง
                StockAddRender.v.add(art);
                updateTable();
                clearData();
            }
            JOptionPane.showMessageDialog(this, "บันทึกข้อมูลเสร็จเรียบร้อย", "เสร็จสมบูรณ์", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addActionPerformed
    public boolean validateData() {
        if (txtName.getText().isEmpty() || txtLast.getText().isEmpty() || txtPeple.getText().length() != 13 || txtTel.getText().length() != 10 || txtArea.getText().isEmpty()) {
            return true;
        }
        return false;
    }

    public boolean checkId() {
        for (int i = 0; i < StockAddRender.v.size(); i++) {
            if (txtPeple.getText().equals(tbRender.getValueAt(i, 0))) {
                return true;
            }
        }
        return false;
    }
    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        if (tbRender.isRowSelected(selected)) {
            selected = tbRender.getSelectedRow();
            AddRenteral ren = (AddRenteral) StockAddRender.v.elementAt(selected);
            System.out.println("primary key:" + ren.getId());
            int r1 = StockAddRender.deleteDB(ren);
            int r2 = StockAddRender.deleteAdressDB(ren);
            int r3 = StockAddRender.deleteTelDB(ren);
            if (r1 == 1 && r2 == 1 && r3 == 1) {
                JOptionPane.showMessageDialog(this, "ลบ" + ren.getId() + "เรียบร้อย");
                StockAddRender.v.remove(selected);//ลบตำแหน่งที่เลือก
                updateTable();//ฟื้นฟูตาราง
                clearData();
            } else {
                System.out.println("เกิดข้อผิดพลาดจากการลบ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "กรุณาเลือกแถวที่จะลบ");
        }
    }//GEN-LAST:event_editActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
        if (tbRender.isRowSelected(selected)) {
            selected = tbRender.getSelectedRow();
            nameSelect = tbRender.getValueAt(selected, 1).toString();
            idSelect = tbRender.getValueAt(selected, 0).toString();
            System.out.println("ได้ผลลัพธ์ชื่อ=" + nameSelect);
            System.out.println("ได้ผลลัพธ์รหัส=" + idSelect);
            this.dispose();
            new Index().show();
        } else {
            JOptionPane.showMessageDialog(this, "กรุณาเลือกข้อมูลในตาราง");
        }
    }//GEN-LAST:event_selectActionPerformed

    private void tbRenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbRenderMouseClicked
        selected = tbRender.getSelectedRow();
        AddRenteral ren = (AddRenteral) StockAddRender.v.elementAt(selected);
        txtPeple.setText(ren.getId());
        txtName.setText(ren.getName());
        txtLast.setText(ren.getlName());
        txtTel.setText(ren.getTel());
        txtArea.setText(ren.getAddress());
        if (ren.getSex().equals("ชาย")) {
            r1.setSelected(true);
        }
        if (ren.getSex().equals("หญิง")) {
            r2.setSelected(true);
        }
        System.out.println("เลือกแถวอะไร:" + selected);
    }//GEN-LAST:event_tbRenderMouseClicked

    private void txtPepleCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtPepleCaretUpdate

            if (txtPeple.getText().length() != 13 || txtTel.getText().isEmpty()) {
                lbch.setIcon(new ImageIcon(error));
            }
            if (txtPeple.getText().length() == 13) {
                lbch.setIcon(new ImageIcon(ok));
            }

    }//GEN-LAST:event_txtPepleCaretUpdate

    private void txtTelCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTelCaretUpdate
           if (txtTel.getText().length() != 10 || txtTel.getText().isEmpty()) {
                lbch1.setIcon(new ImageIcon(error));
            }
            if (txtTel.getText().length() == 10) {
                lbch1.setIcon(new ImageIcon(ok));
            }


    }//GEN-LAST:event_txtTelCaretUpdate

    private void txtNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtNameCaretUpdate
        if (txtName.getText().isEmpty()) {
            lbch2.setIcon(new ImageIcon(error));
        } else {
            lbch2.setIcon(new ImageIcon(ok));
        }
    }//GEN-LAST:event_txtNameCaretUpdate

    private void txtLastCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtLastCaretUpdate
        if (txtLast.getText().isEmpty()) {
            lbch3.setIcon(new ImageIcon(error));
        } else {
            lbch3.setIcon(new ImageIcon(ok));
        }
    }//GEN-LAST:event_txtLastCaretUpdate

    private void txtAreaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtAreaCaretUpdate
        if (txtArea.getText().isEmpty()) {
            lbch4.setIcon(new ImageIcon(error));
        } else {
            lbch4.setIcon(new ImageIcon(ok));
        }
    }//GEN-LAST:event_txtAreaCaretUpdate
    public void clearData() {
        txtArea.setText("");
        txtLast.setText("");
        txtName.setText("");
        txtPeple.setText("");
        txtTel.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRender().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.ButtonGroup bg1;
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbch;
    private javax.swing.JLabel lbch1;
    private javax.swing.JLabel lbch2;
    private javax.swing.JLabel lbch3;
    private javax.swing.JLabel lbch4;
    private javax.swing.JPanel pTable;
    private javax.swing.JPanel pa1;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    private javax.swing.JButton select;
    private javax.swing.JTable tbRender;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtLast;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPeple;
    private javax.swing.JTextField txtTel;
    // End of variables declaration//GEN-END:variables

    public void updateTable() {
        rowdata = new Object[StockAddRender.v.size()][columnName.length];
        AddRenteral render;
        for (int i = 0; i < StockAddRender.v.size(); i++) {
            render = (AddRenteral) StockAddRender.v.elementAt(i);
            rowdata[i][0] = render.getId();
            rowdata[i][1] = render.getName();
            rowdata[i][2] = render.getlName();
            rowdata[i][3] = render.getSex();
            rowdata[i][4] = render.getTel();
            rowdata[i][5] = render.getAddress();
        }
        model = new AbstractTableModel() {

            @Override
            public int getRowCount() {
                return rowdata.length;
            }

            @Override
            public int getColumnCount() {
                return columnName.length;
            }

            public String getColumnName(int column) {
                return columnName[column];
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                return rowdata[rowIndex][columnIndex];
            }
        };
        tbRender.setModel(model);
    }

}
